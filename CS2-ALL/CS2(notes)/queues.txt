a collection of items
first in first out
they are used like stacks to solve a wide variety of problems in computer science
job queues,print queues
simulation - many events can be modeled via a queue or set of queues;
-traffic intercection;
-check out counters;
-DMV-counter;
circular array
-basic form of memory managment
-do all the array indexing modulo the size
-need a front and back;
-front is the first index in the queuel
-back is the next position to put in the element;
-need a flag fo empty;


code:

const int SIZE=100;

template<typename T>
class queue{
public:
         queue() : front(0), back(0), empty(true) ();
    bool isEmpty() const { return empty; };
    bool isFull()  const { return front == back && !empty; };
    T    dequeue();
    void enqueue(const T&);


private:
    int  front;
    int  back;
    bool empty;
    T    q[SIZE];
};

template<typename T>
T queue<T>::dequeue(){
    assert(!isEmpty());
    T result = q[front];
    front = (front + 1) % SIZE;
    if(front == back)
        empty = true;
    return result;
}

template<typename T>
void queue<T>::enqueue(const T& item){
    assert(!isFull());
    q[back] = item;
    back = (back + 1) % SIZE;
    empty = false;
}